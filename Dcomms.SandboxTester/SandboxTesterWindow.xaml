 <Window x:Class="Dcomms.SandboxTester.SandboxTesterMainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Dcomms.SandboxTester"
        WindowStartupLocation="CenterScreen" WindowState="Maximized"
        mc:Ignorable="d"
        
        Title="Dcomms Sandbox Tester" Height="750" Width="1200">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="20">
            <StackPanel Orientation="Horizontal">
                <Button Content="sha256" Command="{Binding TestSha256}"/>
                <TextBlock Text="input size:" />
                <TextBox Text="{Binding TestSha256inputSize}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Button Content="sha512" Command="{Binding TestSha512}"/>
                <TextBlock Text="input size:" />
                <TextBox Text="{Binding TestSha512inputSize}" />
            </StackPanel>
            <StackPanel Orientation="Vertical">
                <Button Command="{Binding TestPoW_CCP_hello0}" Content="test CCP hello0 PoW" />
                <Button Command="{Binding TestEd25519}" Content="TestEd25519" />
                <Button Command="{Binding TestEcdh25519}" Content="TestEcdh25519" />
                <Button Command="{Binding TestAes}" Content="TestAes" />
                <Button Command="{Binding CreateDrpTester1}" Content="CreateDrpTester1(localhost A,EP,X,N)" />
                <Button Command="{Binding CreateDrpTester1_SendInvite}" Content="CreateDrpTester1+send Invite" />

                <Button Command="{Binding CreateDrpTester2}" Content="CreateDrpTester2(localhost)" Visibility="{Binding DrpTester2IsCreated, Converter={StaticResource BoolToVisibilityOppositeConverter}}" />
                <Button Command="{Binding DestroyDrpTester2}" Content="DestroyDrpTester2"  Visibility="{Binding DrpTester2IsCreated, Converter={StaticResource BoolToVisibilityConverter}}" />
                <Button Command="{Binding CreateDrpTester3}" Content="CreateDrpTester3" Visibility="{Binding DrpTester3IsCreated, Converter={StaticResource BoolToVisibilityOppositeConverter}}" />
                <Button Command="{Binding DestroyDrpTester3}" Content="DestroyDrpTester3" Visibility="{Binding DrpTester3IsCreated, Converter={StaticResource BoolToVisibilityConverter}}"  />

                <Button Command="{Binding CreateDrpTester4}" Content="CreateDrpTester4(distance)" />

                <Button Command="{Binding CreateDrpTester5}" Content="CreateDrpTester5" Visibility="{Binding DrpTester5IsCreated, Converter={StaticResource BoolToVisibilityOppositeConverter}}" />
                <Button Command="{Binding DestroyDrpTester5}" Content="DestroyDrpTester5" Visibility="{Binding DrpTester5IsCreated, Converter={StaticResource BoolToVisibilityConverter}}"  />

                <Button Command="{Binding CreateUserAppEngine}" Content="CreateUserAppEngine" Visibility="{Binding UserAppEngineIsCreated, Converter={StaticResource BoolToVisibilityOppositeConverter}}"  />

                <Button Command="{Binding CreateNatTester}" Content="CreateNatTester" Visibility="{Binding NatTesterIsCreated, Converter={StaticResource BoolToVisibilityOppositeConverter}}"  />

            </StackPanel>
        </StackPanel>

        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Visibility="{Binding DrpTester2IsCreated, Converter={StaticResource BoolToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <StackPanel Orientation="Horizontal" >
                    <Button Content="ShowPeers" Margin="3" Command="{Binding DrpTester2.ShowPeers}" />
                    <Button Content="TestInvites" Margin="3" Command="{Binding DrpTester2.TestInvites}" />                    
                </StackPanel>
            </Grid>
            <Grid Visibility="{Binding DrpTester3IsCreated, Converter={StaticResource BoolToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" MinWidth="190"/>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" MinWidth="190"/>
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                            
                
                <TextBlock Grid.Row="0" Text="local EPs:" />
                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding DrpTester3.NumberOfLocalInterconnectedEpEngines, Mode=TwoWay}" MinWidth="50" />

                <TextBlock Grid.Row="1" Text="users:" />
                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding DrpTester3.NumberOfUserApps, Mode=TwoWay}" MinWidth="50" />

                <TextBlock Grid.Row="2" Text="temp peers:" />
                <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding DrpTester3.NumberOfTempPeers, Mode=TwoWay}" MinWidth="50" />

                <TextBlock Grid.Row="3" Text="temp peers worker period (s):" />
                <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding DrpTester3.TempPeersWorkerPeriodS, Mode=TwoWay}" MinWidth="50" />


                <TextBlock Grid.Row="0" Grid.Column="2" Text="VisionChannelSourceIdPrefix:" />
                <TextBox Grid.Row="0" Grid.Column="3" Text="{Binding DrpTester3.VisionChannelSourceIdPrefix, Mode=TwoWay}" MinWidth="50"/>

                <TextBlock Grid.Row="1" Grid.Column="2" Text="local UDP ports range start:" />
                <TextBox Grid.Row="1" Grid.Column="3" Text="{Binding DrpTester3.LocalInterconnectedEpEnginesBasePort, Mode=TwoWay}" />

                <TextBlock Grid.Row="2" Grid.Column="2" Text="remote EPs:" />
                <TextBox Grid.Row="2" Grid.Column="3" Text="{Binding DrpTester3.RemoteEpEndPointsString, Mode=TwoWay}"  />

                <TextBlock Grid.Row="3" Grid.Column="2" Text="num of dimensions:" />
                <TextBox Grid.Row="3" Grid.Column="3" Text="{Binding DrpTester3.NumberOfDimensions, Mode=TwoWay}" />

                <CheckBox Grid.Row="0" Grid.Column="4"  IsChecked="{Binding DrpTester3.EnableMessagesTest, Mode=TwoWay}" Content="enable msgs test" />
                <Button Grid.Row="1" Grid.Column="4" Command="{Binding DrpTester3.GetFirewallSenders}" 
                        Visibility="{Binding DrpTester3.Initialized, Converter={StaticResource BoolToVisibilityConverter}}"
                        Content="get senders" />

                <StackPanel Orientation="Horizontal" Grid.Row="5" Visibility="{Binding DrpTester3.Initialized, Converter={StaticResource BoolToVisibilityOppositeConverter}}">
                    <Button Content="Initialize" Margin="3" Command="{Binding DrpTester3.Initialize}" />
                </StackPanel>
            </Grid>
            <Grid Visibility="{Binding DrpTester4IsCreated, Converter={StaticResource BoolToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" MinWidth="190"/>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" MinWidth="190"/>
                </Grid.ColumnDefinitions>


                <TextBlock Grid.Row="0" Text="number of peers:" />
                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding DrpTester4.Config.NumberOfPeers, Mode=TwoWay}" />
                <TextBlock Grid.Row="1" Text="number of entry peers:" />
                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding DrpTester4.Config.NumberOfEntryPeers, Mode=TwoWay}" />
                
                
                <TextBlock Grid.Row="2" Text="number of neighbors:" />
                <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="1" >
                    <TextBox Text="{Binding DrpTester4.Config.NumberOfNeighbors_Min, Mode=TwoWay}" MinWidth="50" />
                    <TextBlock Text="...soft max: " />
                    <TextBox Text="{Binding DrpTester4.Config.NumberOfNeighbors_SoftMax, Mode=TwoWay}" MinWidth="50" />
                    <TextBlock Text=" hw max:" />
                    <TextBox Text="{Binding DrpTester4.Config.NumberOfNeighbors_HardwareMax, Mode=TwoWay}" MinWidth="50" />
                </StackPanel>
                <TextBlock Grid.Row="3" Text="number of dimensions:" />
                <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding DrpTester4.Config.NumberOfDimensions, Mode=TwoWay}" />
                <TextBlock Grid.Row="4" Text="optimization it. count:" />
                <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding DrpTester4.Config.OptimizationIterationsCount, Mode=TwoWay}" />


                <CheckBox Grid.Row="0" Grid.Column="2"  IsChecked="{Binding DrpTester4.Config.Consider2ndOrderNeighborsForInviteRouting, Mode=TwoWay}" Content="2ndOrderNeighborsForInviteRouting" />
                <CheckBox Grid.Row="1" Grid.Column="2"  IsChecked="{Binding DrpTester4.Config.UseGlobalSearchForRegistration, Mode=TwoWay}" Content="global reg search" />
                
                <TextBlock Grid.Row="2" Grid.Column="2"  Text="TotalMaxHopsCountToExtendNeighbors" />
                <TextBox Grid.Row="2" Grid.Column="3" Text="{Binding DrpTester4.Config.TotalMaxHopsCountToExtendNeighbors, Mode=TwoWay}" />
                <TextBlock Grid.Row="3" Grid.Column="2"  Text="RandomHopsCountToExtendNeighbors" />
                <TextBox Grid.Row="3" Grid.Column="3" Text="{Binding DrpTester4.Config.RandomHopsCountToExtendNeighbors, Mode=TwoWay}" />


                <TextBlock Grid.Row="4" Grid.Column="2"  Text="NewTestedPeersCount" />
                <TextBox Grid.Row="4" Grid.Column="3" Text="{Binding DrpTester4.Config.NewTestedPeersCount, Mode=TwoWay}" />
                <TextBlock Grid.Row="5" Grid.Column="2"  Text="TestedDestinationsCount" />
                <TextBox Grid.Row="5" Grid.Column="3" Text="{Binding DrpTester4.Config.TestedDestinationsCount, Mode=TwoWay}" />
                <TextBlock Grid.Row="6" Grid.Column="2"  Text="TestedMaxHopsCount" />
                <TextBox Grid.Row="6" Grid.Column="3" Text="{Binding DrpTester4.Config.TestedMaxHopsCount, Mode=TwoWay}" />
                                

                <StackPanel Orientation="Horizontal" Grid.Row="7" >
                    <Button Content="Test" Margin="3" Command="{Binding DrpTester4.Test}" />
                    <CheckBox  IsChecked="{Binding DrpTester4.EnableDetailedLogs, Mode=TwoWay}" Content="detailed logs" />
                </StackPanel>
            </Grid>

            <Grid Visibility="{Binding DrpTester5IsCreated, Converter={StaticResource BoolToVisibilityConverter}}" Margin="0 10 0 0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" MinWidth="190"/>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" MinWidth="190"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Row="0" Text="local user:" />
                <ComboBox Grid.Row="0" Grid.Column="1" ItemsSource="{Binding DrpTester5.PredefinedUsers}" DisplayMemberPath="Name" SelectedItem="{Binding DrpTester5.LocalUser, Mode=TwoWay}" />
                <TextBlock Grid.Row="1" Text="remote user:" />
                <ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding DrpTester5.PredefinedUsers}" DisplayMemberPath="Name" SelectedItem="{Binding DrpTester5.RemoteUser, Mode=TwoWay}"  />
                <TextBlock Grid.Row="2" Text="local UDP port:" />
                <TextBox Grid.Row="2" Grid.Column="1"  Text="{Binding DrpTester5.LocalUdpPortString, Mode=TwoWay}"  />

                <TextBlock Grid.Row="0" Grid.Column="2" Text="remote EPs:" />
                <TextBox Grid.Row="0" Grid.Column="3" Text="{Binding DrpTester5.RemoteEpEndPointsString, Mode=TwoWay}" />
                <TextBlock Grid.Row="1" Grid.Column="2" Text="num of dimensions:" />
                <TextBox Grid.Row="1" Grid.Column="3" Text="{Binding DrpTester5.NumberOfDimensions, Mode=TwoWay}" />

                <StackPanel Orientation="Horizontal" Grid.Row="3" Visibility="{Binding DrpTester5.Initialized, Converter={StaticResource BoolToVisibilityOppositeConverter}}">
                    <Button Content="Initialize" Margin="3" Command="{Binding DrpTester5.Initialize}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Row="3" Visibility="{Binding DrpTester5.Initialized, Converter={StaticResource BoolToVisibilityConverter}}">
                    <Button Content="TestUPnPdec10" Command="{Binding DrpTester5.TestUPnPdec10}" VerticalAlignment="Top" />
                    <Button Content="StartNat1Test" Command="{Binding DrpTester5.StartNat1Test}" VerticalAlignment="Top" />
                    <Button Content="StopNat1Test" Command="{Binding DrpTester5.StopNat1Test}" VerticalAlignment="Top" />
                    <Button Content="Deinitialize DRP" Command="{Binding DrpTester5.DeinitializeDrpPeer}" VerticalAlignment="Top" />                    
                    <TextBlock Text="remote EPs:" />
                    <TextBox Text="{Binding DrpTester5.Nat1TestRemoteEPs, Mode=TwoWay}" Height="100" Width="200"/>
                </StackPanel>
            </Grid>

            <Grid Visibility="{Binding NatTesterIsCreated, Converter={StaticResource BoolToVisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="100"/>
                </Grid.ColumnDefinitions>
                <TextBox Height="150" MinWidth="200" VerticalScrollBarVisibility="Auto" AcceptsReturn="True" Text="{Binding NatTester.RemoteEndpointsString, Mode=TwoWay}" />

                <Button Grid.Column="1" Command="{Binding NatTester.Test}" Content="Test" VerticalAlignment="Bottom" />
            </Grid>

            <TabControl Grid.Row="1" x:Name="visionGui">               
                <TabItem Header="Log">
                    <Grid>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <WrapPanel Orientation="Horizontal">
                                <Button Content="refresh" Command="{Binding RefreshDisplayedLogMessages}" Background="{Binding RefreshDisplayedLogMessagesButtonColor, Mode=OneWay, Converter={StaticResource ColorToBrushConverter}}" />

                                <Button Content="clear" Command="{Binding ClearLogMessages}" />

                                <TextBlock Text="display: " />
                                <TextBox MinWidth="35" Text="{Binding DisplayedLogMessagesMaxCount, Mode=TwoWay}" />
                                

                                <CheckBox IsChecked="{Binding EnableNewLogMessages, Mode=TwoWay}" Content="enable new" />

                                <TextBlock Text="until RAM (MB): " />
                                <TextBox MinWidth="50" Text="{Binding ClearLog_RamSizeMB, Mode=TwoWay}" />
                                <TextBlock Text="max msg count: " />
                                <TextBox MinWidth="50" Text="{Binding ClearLog_MessagesCount, Mode=TwoWay}" />
                                
                                
                                
                                <TextBlock Text="Filter:" />


                                <TextBlock Text="Display level:" />
                                <ComboBox SelectedItem="{Binding DisplayFilterMinLevel, Mode=TwoWay}" ItemsSource="{Binding DisplayFilterMinLevels}" VerticalAlignment="Center"/>
                                <TextBlock Text="attention:" />
                                <ComboBox SelectedItem="{Binding AttentionLevel, Mode=TwoWay}" ItemsSource="{Binding DisplayFilterMinLevels}" VerticalAlignment="Center"/>


                                <TextBlock Text="Sources:" />
                                <TextBox Text="{Binding DisplayFilterSourceIds, Mode=TwoWay}" Width="100"/>

                                <TextBlock Text="Modules:" />
                                <TextBox Text="{Binding DisplayFilterModuleContainsStrings, Mode=TwoWay}" Width="200"/>
                                <TextBlock Text="exclude" />
                                <TextBox Text="{Binding DisplayFilterModuleExcludesStrings, Mode=TwoWay}" Width="100"/>                                

                                <TextBlock Text="Msg contains:" />
                                <TextBox Text="{Binding DisplayFilterMessageContainsString, Mode=TwoWay}" Width="200" />

                                <CheckBox Content="skip new unselected" IsChecked="{Binding SkipNewUnselectedMessages, Mode=TwoWay}" />
                                
                                <TextBlock Text="{Binding MaxEmittedAttentionLevelLogMessage, Mode=OneWay}" TextWrapping="Wrap" />

                            </WrapPanel>
                            <DataGrid Grid.Row="1" ItemsSource="{Binding DisplayedLogMessages}" AutoGenerateColumns="False" >
                                <DataGrid.Columns>
                                    <DataGridCheckBoxColumn Header="Sel" Binding="{Binding Selected, Mode=TwoWay}" />
                                    <DataGridTemplateColumn Header="Level" >
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Margin="0" Text="{Binding AttentionLevelStr, Mode=OneTime}" Background="{Binding AttentionLevelColor, Mode=OneTime, Converter={StaticResource ColorToBrushConverter}}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Header="Time" Binding="{Binding TimeStr, Mode=OneTime}" />
                                    <DataGridTextColumn Header="Thread" Binding="{Binding ManagedThreadId, Mode=OneTime}" />
                                    <DataGridTextColumn Header="Source" Binding="{Binding SourceId, Mode=OneTime}" />
                                    <DataGridTextColumn Header="Module" Binding="{Binding ModuleName, Mode=OneTime}" />
                                    <DataGridTextColumn Header="Message" Binding="{Binding Message, Mode=OneTime}" MaxWidth="800" >
                                        <DataGridTextColumn.ElementStyle>
                                            <Style>
                                                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTemplateColumn Header="Peers">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <Button Content="show peers" Command="{Binding DisplayPeersList}" Visibility="{Binding DisplayPeersListVisible, Converter={StaticResource BoolToVisibilityConverter}}" />
                                                    <Button Content="show path" Command="{Binding DisplayRoutingPath}" Visibility="{Binding DisplayRoutingPathVisible, Converter={StaticResource BoolToVisibilityConverter}}" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </Grid>
                </TabItem>
                <TabItem Header="Sel. log">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal">
                            <Button Content="refresh" Command="{Binding RefreshDisplayedSelectedLogMessages}" />
                        </StackPanel>

                        <DataGrid Grid.Row="1" ItemsSource="{Binding DisplayedSelectedLogMessages}" AutoGenerateColumns="False" >
                            <DataGrid.Columns>
                                <DataGridCheckBoxColumn Header="Sel" Binding="{Binding Selected, Mode=TwoWay}" />
                                <DataGridTemplateColumn Header="Level" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Margin="0" Text="{Binding AttentionLevelStr, Mode=OneTime}" Background="{Binding AttentionLevelColor, Mode=OneTime, Converter={StaticResource ColorToBrushConverter}}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Time" Binding="{Binding TimeStr, Mode=OneTime}" />
                                <DataGridTextColumn Header="Thread" Binding="{Binding ManagedThreadId, Mode=OneTime}" />
                                <DataGridTextColumn Header="Source" Binding="{Binding SourceId, Mode=OneTime}" />
                                <DataGridTextColumn Header="Module" Binding="{Binding ModuleName, Mode=OneTime}" />
                                <DataGridTextColumn Header="Message" Binding="{Binding Message, Mode=OneTime}" MaxWidth="800" >
                                    <DataGridTextColumn.ElementStyle>
                                        <Style>
                                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>
                <TabItem Header="Modules">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <WrapPanel Orientation="Horizontal">
                            <Button Content="refresh" Command="{Binding RefreshDisplayedVisibleModules}" />
                            <TextBlock Text="Module contains:" />
                            <TextBox Text="{Binding VisibleModulePathContainsString, Mode=TwoWay}" Width="400" />
                            <TextBlock Text="Status contains:" />
                            <TextBox Text="{Binding VisibleModuleStatusContainsString, Mode=TwoWay}" Width="200" />                            
                        </WrapPanel>

                        <DataGrid Grid.Row="1" ItemsSource="{Binding DisplayedVisibleModules}" AutoGenerateColumns="False" >
                            <DataGrid.Columns>                          
                                <DataGridTextColumn Header="Path" Binding="{Binding Path, Mode=OneTime}" />
                                <DataGridTextColumn Header="Status" Binding="{Binding Status, Mode=OneTime}" MaxWidth="800" >
                                    <DataGridTextColumn.ElementStyle>
                                        <Style>
                                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>  
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>        
    </Grid>
</Window>
